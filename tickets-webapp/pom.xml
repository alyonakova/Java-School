<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>ru.t-systems.alyona.sbb</groupId>
        <artifactId>sbb</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>ru.t-systems.alyona.sbb</groupId>
    <artifactId>sbb-tickets-webapp</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>SBB Tickets Web Application</name>
    <url>https://github.com/alyonakova/Java-School</url>

    <dependencies>
        <!-- PRODUCTION DEPENDENCIES --><!-- Java EE APIs, including Java Servlet API -->
        <!-- Timetable DTO and related classes -->
        <dependency>
            <groupId>ru.t-systems.alyona.sbb</groupId>
            <artifactId>sbb-timetable-domain-objects</artifactId>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.jms</groupId>
            <artifactId>javax.jms-api</artifactId>
            <version>2.0.1</version>
        </dependency>
        <!-- Needed for .jsp files to work -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <!-- Spring dependency injection (including @Autowired) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <!-- Spring MVC (including @Controller) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <!-- Spring Security -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
        </dependency>
        <!-- An implementation of Java Persistence API (JPA) -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>
        <!-- PostgreSQL JDBC driver -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <!-- Bean-to-bean mapping -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
        </dependency>
        <!-- JSON (de)serialization -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <!-- (De)serialization of java.time classes (e.g. LocalDateTime) -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <!-- Reduces boilerplate code -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- Extensions for Java Stream API, e.g. partial reduction -->
        <dependency>
            <groupId>one.util</groupId>
            <artifactId>streamex</artifactId>
        </dependency>
        <!-- Allows formatting java.time classes in JSP (with tag <javatime:format>) -->
        <dependency>
            <groupId>net.sargue</groupId>
            <artifactId>java-time-jsptags</artifactId>
        </dependency>
        <!-- Java EE Dependency Injection API, including javax.inject.Provider<T> -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>
        <!-- Logging -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>
        <!-- Validation -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <!-- Connect to remote JNDI -->
        <dependency>
            <groupId>org.wildfly.wildfly-http-client</groupId>
            <artifactId>wildfly-http-naming-client</artifactId>
            <version>1.1.3.Final</version>
        </dependency>
        <!-- Connect to remote JMS -->
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-jms-client-bom</artifactId>
            <version>20.0.1.Final</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
        </dependency>
        <!-- END OF PRODUCTION DEPENDENCIES -->

        <!-- TEST DEPENDENCIES -->
        <!-- The JUnit Jupiter test framework -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Mocking framework for unit tests -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <!-- A JUnit extension to @InjectMocks into test subjects -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
        </dependency>
        <!-- Google Truth, an assertions library -->
        <dependency>
            <groupId>com.google.truth</groupId>
            <artifactId>truth</artifactId>
        </dependency>
        <!-- END OF TEST DEPENDENCIES -->
    </dependencies>

    <build>
        <finalName>T-Systems-SBB</finalName>
    </build>
</project>
